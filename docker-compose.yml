version: '3.2'
services:

  postgres:
    container_name: postgres
    image: postgres:13.1
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready","-U","airflow"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always
  
  redis:
    container_name: redis
    image: redis:5.0.5
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ['CMD',"redis-cli",'ping']
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 30s
    restart: always


  webserver:
    env_file:
      - .env
    container_name: webserver
    image: apache/airflow:2.3.0
    ports:
      - 8080:8080
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - redis
      - initdb
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid]"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always

  scheduler:
    env_file:
      - .env
    container_name: scheduler
    image: apache/airflow:2.3.0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - initdb
    command: scheduler
    restart: always
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  airflow_spark_worker:
    container_name: airflow_spark_worker
    env_file:
      - .env
    build: ./docker
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker -q worker_spark
    restart: always
    depends_on:
      - scheduler
    healthcheck:
      test: ["CMD-SHELL", 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  airflow_cpu_worker:
    container_name: airflow_cpu_worker
    env_file:
      - .env
    image: apache/airflow:2.3.0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker -q worker_cpu
    restart: always
    depends_on:
      - scheduler
    healthcheck:
      test: ["CMD-SHELL", 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  airflow_IO_worker:
    container_name: airflow_IO_worker
    env_file:
      - .env
    image: apache/airflow:2.3.0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker -q worker_io,default
    restart: always
    depends_on:
      - scheduler
    healthcheck:
      test: ["CMD-SHELL", 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"']
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  flower:
    container_name: flower
    image: apache/airflow:2.3.0
    env_file:
      - .env
    restart: always
    depends_on:
      - redis
    ports:
      - 5555:5555
    volumes:
      - ./logs:/opt/airflow/logs
    command: celery flower
    healthcheck:
      test: ["CMD","curl","--fail","http://localhost:5555/"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  initdb:
    container_name: initdb
    env_file:
      - .env
    image: apache/airflow:2.3.0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config:/opt/airflow/config
      - ./files:/opt/airflow/files
      - ./plugins:/opt/airflow/plugins
      - ./datasets:/opt/airflow/datasets
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --firstname admin --lastname admin --email admin --password admin --username admin --role Admin"
    depends_on:
      - redis
      - postgres
